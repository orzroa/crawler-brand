<!--
<?xml version="1.0" encoding="UTF-8"?>  <!DOCTYPE generatorConfiguration   PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    &lt;!&ndash; 引入配置文件 &ndash;&gt;
    &lt;!&ndash;<properties resource="application.yml"/>&ndash;&gt;
    &lt;!&ndash; Driver Class Path &ndash;&gt;
    <classPathEntry location="E:\Resource_cache\repository\mysql\mysql-connector-java\5.1.46\mysql-connector-java-5.1.46.jar"/>
    &lt;!&ndash; 一个数据库一个context &ndash;&gt;
    <context id="context" targetRuntime="Mybatis3">
        &lt;!&ndash; 生成的pojo，将implements Serializable &ndash;&gt;
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"></plugin>
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"></plugin>

        &lt;!&ndash; 注释 &ndash;&gt;
        <commentGenerator>
            &lt;!&ndash; 是否取消注释 &ndash;&gt;&lt;!&ndash; <property name="suppressDate" value="true" />  是否生成注释代时间戳 &ndash;&gt;
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        &lt;!&ndash; 数据库链接URL、用户名、密码 &ndash;&gt;
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://rr-bp1refgx3467t7y54o.mysql.rds.aliyuncs.com:3306/gaodu"
                        userId="gdroot"
                        password="gdroot"></jdbcConnection>
        &lt;!&ndash; 类型转换 &ndash;&gt;
        <javaTypeResolver>
            &lt;!&ndash; 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL和 NUMERIC 类型解析为java.math.BigDecimal &ndash;&gt;
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        &lt;!&ndash;Model Configurations&ndash;&gt;
        &lt;!&ndash; 生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，                 也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下 &ndash;&gt;
        <javaModelGenerator targetPackage="com.hizhu.crawler.brand.entity.po.temp"
                            targetProject="src/main/java">
            &lt;!&ndash; 是否在当前路径下新加一层schema,eg：false路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] &ndash;&gt;
            <property name="enableSubPackages" value="false"/>
            &lt;!&ndash; 从数据库返回的值被清理前后的空格 &ndash;&gt;
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        &lt;!&ndash;MapperXml Configurations&ndash;&gt;
        &lt;!&ndash;对应的mapper.xml文件 &ndash;&gt;
        <sqlMapGenerator targetPackage="sqlmap4temp" targetProject="src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        &lt;!&ndash;！！！！ Mapper Interface Configurations&ndash;&gt;
        &lt;!&ndash; 对应的Mapper接口类文件 &ndash;&gt;
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.hizhu.crawler.brand.mapper4temp" targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>
        &lt;!&ndash; 列出要生成代码的所有表，这里配置的是不生成Example文件 &ndash;&gt;
        &lt;!&ndash; schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample      是否生成 example类   &ndash;&gt;
        <table tableName="${gererator.tableName}" domainObjectName="${gererator.objectName}"
               schema="${gererator.schema}" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            &lt;!&ndash; 忽略列，不生成bean 字段
             <ignoreColumn column="FRED" />&ndash;&gt;
            &lt;!&ndash; 指定列的java数据类型  <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />  &ndash;&gt;
            &lt;!&ndash; 用于指定生成实体类时是否使用实际的列名作为实体类的属性名。false是 Camel Case风格&ndash;&gt;
            <property name="useActualColumnNames" value="false"/>
        </table>
        &lt;!&ndash;<table tableName="brand_info" enableCountByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" enableUpdateByExample="false">
        </table>
        <table tableName="steward_info" enableCountByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" enableUpdateByExample="false">
        </table>&ndash;&gt;
        <table tableName="houseinfotype" enableCountByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" enableUpdateByExample="false">
        </table>
    </context>
</generatorConfiguration>
-->
